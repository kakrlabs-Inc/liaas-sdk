/*
KakrLabs-SDK-Creator

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateMultiSignatureAddressdto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateMultiSignatureAddressdto{}

// CreateMultiSignatureAddressdto struct for CreateMultiSignatureAddressdto
type CreateMultiSignatureAddressdto struct {
	// addresses (L addresses) to be given priviledge to sign a transaction seperated with a comma for example LTm0jfypM0....Yi, Lkfr5tt......Mn
	Addresses string `json:"addresses"`
	Nreqired int32 `json:"nreqired"`
	AddressType string `json:"address_type"`
}

type _CreateMultiSignatureAddressdto CreateMultiSignatureAddressdto

// NewCreateMultiSignatureAddressdto instantiates a new CreateMultiSignatureAddressdto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMultiSignatureAddressdto(addresses string, nreqired int32, addressType string) *CreateMultiSignatureAddressdto {
	this := CreateMultiSignatureAddressdto{}
	this.Addresses = addresses
	this.Nreqired = nreqired
	this.AddressType = addressType
	return &this
}

// NewCreateMultiSignatureAddressdtoWithDefaults instantiates a new CreateMultiSignatureAddressdto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMultiSignatureAddressdtoWithDefaults() *CreateMultiSignatureAddressdto {
	this := CreateMultiSignatureAddressdto{}
	return &this
}

// GetAddresses returns the Addresses field value
func (o *CreateMultiSignatureAddressdto) GetAddresses() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value
// and a boolean to check if the value has been set.
func (o *CreateMultiSignatureAddressdto) GetAddressesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Addresses, true
}

// SetAddresses sets field value
func (o *CreateMultiSignatureAddressdto) SetAddresses(v string) {
	o.Addresses = v
}

// GetNreqired returns the Nreqired field value
func (o *CreateMultiSignatureAddressdto) GetNreqired() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Nreqired
}

// GetNreqiredOk returns a tuple with the Nreqired field value
// and a boolean to check if the value has been set.
func (o *CreateMultiSignatureAddressdto) GetNreqiredOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nreqired, true
}

// SetNreqired sets field value
func (o *CreateMultiSignatureAddressdto) SetNreqired(v int32) {
	o.Nreqired = v
}

// GetAddressType returns the AddressType field value
func (o *CreateMultiSignatureAddressdto) GetAddressType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AddressType
}

// GetAddressTypeOk returns a tuple with the AddressType field value
// and a boolean to check if the value has been set.
func (o *CreateMultiSignatureAddressdto) GetAddressTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddressType, true
}

// SetAddressType sets field value
func (o *CreateMultiSignatureAddressdto) SetAddressType(v string) {
	o.AddressType = v
}

func (o CreateMultiSignatureAddressdto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateMultiSignatureAddressdto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["addresses"] = o.Addresses
	toSerialize["nreqired"] = o.Nreqired
	toSerialize["address_type"] = o.AddressType
	return toSerialize, nil
}

func (o *CreateMultiSignatureAddressdto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"addresses",
		"nreqired",
		"address_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateMultiSignatureAddressdto := _CreateMultiSignatureAddressdto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateMultiSignatureAddressdto)

	if err != nil {
		return err
	}

	*o = CreateMultiSignatureAddressdto(varCreateMultiSignatureAddressdto)

	return err
}

type NullableCreateMultiSignatureAddressdto struct {
	value *CreateMultiSignatureAddressdto
	isSet bool
}

func (v NullableCreateMultiSignatureAddressdto) Get() *CreateMultiSignatureAddressdto {
	return v.value
}

func (v *NullableCreateMultiSignatureAddressdto) Set(val *CreateMultiSignatureAddressdto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMultiSignatureAddressdto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMultiSignatureAddressdto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMultiSignatureAddressdto(val *CreateMultiSignatureAddressdto) *NullableCreateMultiSignatureAddressdto {
	return &NullableCreateMultiSignatureAddressdto{value: val, isSet: true}
}

func (v NullableCreateMultiSignatureAddressdto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMultiSignatureAddressdto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


