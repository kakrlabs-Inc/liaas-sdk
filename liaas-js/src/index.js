/**
 * KakrLabs-SDK-Creator
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BroadcastTransactiondto from './model/BroadcastTransactiondto';
import ChangePassphrasedto from './model/ChangePassphrasedto';
import CreateAddressdto from './model/CreateAddressdto';
import CreateMultiSignatureAddressdto from './model/CreateMultiSignatureAddressdto';
import CreateRawTransactiondto from './model/CreateRawTransactiondto';
import CreateRawTransactiondtoV2 from './model/CreateRawTransactiondtoV2';
import CreateRawTransactiondtoV3 from './model/CreateRawTransactiondtoV3';
import CreateWalletRequest from './model/CreateWalletRequest';
import EncryptWalletDto from './model/EncryptWalletDto';
import GenerateDefaultAddressdto from './model/GenerateDefaultAddressdto';
import ImportWalletdto from './model/ImportWalletdto';
import SendFromWalletdto from './model/SendFromWalletdto';
import SetWalletMnemonicsdto from './model/SetWalletMnemonicsdto';
import SignMessageUsingWalletdto from './model/SignMessageUsingWalletdto';
import SignMessagedto from './model/SignMessagedto';
import SignRawTransactiondto from './model/SignRawTransactiondto';
import VerifyMessagedto from './model/VerifyMessagedto';
import VerifyOTPdto from './model/VerifyOTPdto';
import AddressApi from './api/AddressApi';
import BlocksApi from './api/BlocksApi';
import LitecoinApi from './api/LitecoinApi';
import TransactionsApi from './api/TransactionsApi';
import UtilitiesApi from './api/UtilitiesApi';
import WalletApi from './api/WalletApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var KakrLabsSdkCreator = require('index'); // See note below*.
* var xxxSvc = new KakrLabsSdkCreator.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new KakrLabsSdkCreator.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new KakrLabsSdkCreator.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new KakrLabsSdkCreator.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BroadcastTransactiondto model constructor.
     * @property {module:model/BroadcastTransactiondto}
     */
    BroadcastTransactiondto,

    /**
     * The ChangePassphrasedto model constructor.
     * @property {module:model/ChangePassphrasedto}
     */
    ChangePassphrasedto,

    /**
     * The CreateAddressdto model constructor.
     * @property {module:model/CreateAddressdto}
     */
    CreateAddressdto,

    /**
     * The CreateMultiSignatureAddressdto model constructor.
     * @property {module:model/CreateMultiSignatureAddressdto}
     */
    CreateMultiSignatureAddressdto,

    /**
     * The CreateRawTransactiondto model constructor.
     * @property {module:model/CreateRawTransactiondto}
     */
    CreateRawTransactiondto,

    /**
     * The CreateRawTransactiondtoV2 model constructor.
     * @property {module:model/CreateRawTransactiondtoV2}
     */
    CreateRawTransactiondtoV2,

    /**
     * The CreateRawTransactiondtoV3 model constructor.
     * @property {module:model/CreateRawTransactiondtoV3}
     */
    CreateRawTransactiondtoV3,

    /**
     * The CreateWalletRequest model constructor.
     * @property {module:model/CreateWalletRequest}
     */
    CreateWalletRequest,

    /**
     * The EncryptWalletDto model constructor.
     * @property {module:model/EncryptWalletDto}
     */
    EncryptWalletDto,

    /**
     * The GenerateDefaultAddressdto model constructor.
     * @property {module:model/GenerateDefaultAddressdto}
     */
    GenerateDefaultAddressdto,

    /**
     * The ImportWalletdto model constructor.
     * @property {module:model/ImportWalletdto}
     */
    ImportWalletdto,

    /**
     * The SendFromWalletdto model constructor.
     * @property {module:model/SendFromWalletdto}
     */
    SendFromWalletdto,

    /**
     * The SetWalletMnemonicsdto model constructor.
     * @property {module:model/SetWalletMnemonicsdto}
     */
    SetWalletMnemonicsdto,

    /**
     * The SignMessageUsingWalletdto model constructor.
     * @property {module:model/SignMessageUsingWalletdto}
     */
    SignMessageUsingWalletdto,

    /**
     * The SignMessagedto model constructor.
     * @property {module:model/SignMessagedto}
     */
    SignMessagedto,

    /**
     * The SignRawTransactiondto model constructor.
     * @property {module:model/SignRawTransactiondto}
     */
    SignRawTransactiondto,

    /**
     * The VerifyMessagedto model constructor.
     * @property {module:model/VerifyMessagedto}
     */
    VerifyMessagedto,

    /**
     * The VerifyOTPdto model constructor.
     * @property {module:model/VerifyOTPdto}
     */
    VerifyOTPdto,

    /**
    * The AddressApi service constructor.
    * @property {module:api/AddressApi}
    */
    AddressApi,

    /**
    * The BlocksApi service constructor.
    * @property {module:api/BlocksApi}
    */
    BlocksApi,

    /**
    * The LitecoinApi service constructor.
    * @property {module:api/LitecoinApi}
    */
    LitecoinApi,

    /**
    * The TransactionsApi service constructor.
    * @property {module:api/TransactionsApi}
    */
    TransactionsApi,

    /**
    * The UtilitiesApi service constructor.
    * @property {module:api/UtilitiesApi}
    */
    UtilitiesApi,

    /**
    * The WalletApi service constructor.
    * @property {module:api/WalletApi}
    */
    WalletApi
};
