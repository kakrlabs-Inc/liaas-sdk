/*
KakrLabs-SDK-Creator

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VerifyOTPdto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyOTPdto{}

// VerifyOTPdto struct for VerifyOTPdto
type VerifyOTPdto struct {
	Signtaure string `json:"signtaure"`
	Code string `json:"code"`
}

type _VerifyOTPdto VerifyOTPdto

// NewVerifyOTPdto instantiates a new VerifyOTPdto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyOTPdto(signtaure string, code string) *VerifyOTPdto {
	this := VerifyOTPdto{}
	this.Signtaure = signtaure
	this.Code = code
	return &this
}

// NewVerifyOTPdtoWithDefaults instantiates a new VerifyOTPdto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyOTPdtoWithDefaults() *VerifyOTPdto {
	this := VerifyOTPdto{}
	return &this
}

// GetSigntaure returns the Signtaure field value
func (o *VerifyOTPdto) GetSigntaure() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signtaure
}

// GetSigntaureOk returns a tuple with the Signtaure field value
// and a boolean to check if the value has been set.
func (o *VerifyOTPdto) GetSigntaureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signtaure, true
}

// SetSigntaure sets field value
func (o *VerifyOTPdto) SetSigntaure(v string) {
	o.Signtaure = v
}

// GetCode returns the Code field value
func (o *VerifyOTPdto) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *VerifyOTPdto) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *VerifyOTPdto) SetCode(v string) {
	o.Code = v
}

func (o VerifyOTPdto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyOTPdto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signtaure"] = o.Signtaure
	toSerialize["code"] = o.Code
	return toSerialize, nil
}

func (o *VerifyOTPdto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"signtaure",
		"code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerifyOTPdto := _VerifyOTPdto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerifyOTPdto)

	if err != nil {
		return err
	}

	*o = VerifyOTPdto(varVerifyOTPdto)

	return err
}

type NullableVerifyOTPdto struct {
	value *VerifyOTPdto
	isSet bool
}

func (v NullableVerifyOTPdto) Get() *VerifyOTPdto {
	return v.value
}

func (v *NullableVerifyOTPdto) Set(val *VerifyOTPdto) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyOTPdto) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyOTPdto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyOTPdto(val *VerifyOTPdto) *NullableVerifyOTPdto {
	return &NullableVerifyOTPdto{value: val, isSet: true}
}

func (v NullableVerifyOTPdto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyOTPdto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


