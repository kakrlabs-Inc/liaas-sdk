/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.WalletApi
import org.openapitools.client.models.ChangePassphrasedto
import org.openapitools.client.models.CreateWalletRequest
import org.openapitools.client.models.EncryptWalletDto
import org.openapitools.client.models.ImportWalletdto
import org.openapitools.client.models.SetWalletMnemonicsdto
import org.openapitools.client.models.SignMessageUsingWalletdto

class WalletApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of WalletApi
        //val apiInstance = WalletApi()

        // to test apiWalletAddressesGet
        should("test apiWalletAddressesGet") {
            // uncomment below to test apiWalletAddressesGet
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val walletName : kotlin.String = walletName_example // kotlin.String | 
            //apiInstance.apiWalletAddressesGet(nodeUrlOrApiAccessKey, walletName)
        }

        // to test apiWalletBalanceGet
        should("test apiWalletBalanceGet") {
            // uncomment below to test apiWalletBalanceGet
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val walletName : kotlin.String = walletName_example // kotlin.String | 
            //apiInstance.apiWalletBalanceGet(nodeUrlOrApiAccessKey, walletName)
        }

        // to test apiWalletChangePassphrasePost
        should("test apiWalletChangePassphrasePost") {
            // uncomment below to test apiWalletChangePassphrasePost
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val changePassphrasedto : ChangePassphrasedto =  // ChangePassphrasedto | 
            //apiInstance.apiWalletChangePassphrasePost(nodeUrlOrApiAccessKey, changePassphrasedto)
        }

        // to test apiWalletCreateEncryptedWalletPost
        should("test apiWalletCreateEncryptedWalletPost") {
            // uncomment below to test apiWalletCreateEncryptedWalletPost
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val createWalletRequest : CreateWalletRequest =  // CreateWalletRequest | 
            //apiInstance.apiWalletCreateEncryptedWalletPost(nodeUrlOrApiAccessKey, createWalletRequest)
        }

        // to test apiWalletCreateImportableEncryptedWalletPost
        should("test apiWalletCreateImportableEncryptedWalletPost") {
            // uncomment below to test apiWalletCreateImportableEncryptedWalletPost
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val createWalletRequest : CreateWalletRequest =  // CreateWalletRequest | 
            //apiInstance.apiWalletCreateImportableEncryptedWalletPost(nodeUrlOrApiAccessKey, createWalletRequest)
        }

        // to test apiWalletCreateImportableWalletPost
        should("test apiWalletCreateImportableWalletPost") {
            // uncomment below to test apiWalletCreateImportableWalletPost
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val createWalletRequest : CreateWalletRequest =  // CreateWalletRequest | 
            //apiInstance.apiWalletCreateImportableWalletPost(nodeUrlOrApiAccessKey, createWalletRequest)
        }

        // to test apiWalletCreatePost
        should("test apiWalletCreatePost") {
            // uncomment below to test apiWalletCreatePost
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val createWalletRequest : CreateWalletRequest =  // CreateWalletRequest | 
            //apiInstance.apiWalletCreatePost(nodeUrlOrApiAccessKey, createWalletRequest)
        }

        // to test apiWalletDetailsGet
        should("test apiWalletDetailsGet") {
            // uncomment below to test apiWalletDetailsGet
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val walletName : kotlin.String = walletName_example // kotlin.String | 
            //apiInstance.apiWalletDetailsGet(nodeUrlOrApiAccessKey, walletName)
        }

        // to test apiWalletEncryptWalletPost
        should("test apiWalletEncryptWalletPost") {
            // uncomment below to test apiWalletEncryptWalletPost
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val walletName : kotlin.String = walletName_example // kotlin.String | 
            //val encryptWalletDto : EncryptWalletDto =  // EncryptWalletDto | 
            //apiInstance.apiWalletEncryptWalletPost(nodeUrlOrApiAccessKey, walletName, encryptWalletDto)
        }

        // to test apiWalletImportWalletPost
        should("test apiWalletImportWalletPost") {
            // uncomment below to test apiWalletImportWalletPost
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val importWalletdto : ImportWalletdto =  // ImportWalletdto | 
            //apiInstance.apiWalletImportWalletPost(nodeUrlOrApiAccessKey, importWalletdto)
        }

        // to test apiWalletOfficialAddressGet
        should("test apiWalletOfficialAddressGet") {
            // uncomment below to test apiWalletOfficialAddressGet
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val walletName : kotlin.String = walletName_example // kotlin.String | 
            //apiInstance.apiWalletOfficialAddressGet(nodeUrlOrApiAccessKey, walletName)
        }

        // to test apiWalletSetWalletMnemonicsPost
        should("test apiWalletSetWalletMnemonicsPost") {
            // uncomment below to test apiWalletSetWalletMnemonicsPost
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val walletName : kotlin.String = walletName_example // kotlin.String | 
            //val encryptedPassphrase : kotlin.String = encryptedPassphrase_example // kotlin.String | 
            //val setWalletMnemonicsdto : SetWalletMnemonicsdto =  // SetWalletMnemonicsdto | 
            //apiInstance.apiWalletSetWalletMnemonicsPost(nodeUrlOrApiAccessKey, walletName, encryptedPassphrase, setWalletMnemonicsdto)
        }

        // to test apiWalletSignWalletMessagePost
        should("test apiWalletSignWalletMessagePost") {
            // uncomment below to test apiWalletSignWalletMessagePost
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val walletName : kotlin.String = walletName_example // kotlin.String | 
            //val signMessageUsingWalletdto : SignMessageUsingWalletdto =  // SignMessageUsingWalletdto | 
            //apiInstance.apiWalletSignWalletMessagePost(nodeUrlOrApiAccessKey, walletName, signMessageUsingWalletdto)
        }

        // to test apiWalletTransactionsGet
        should("test apiWalletTransactionsGet") {
            // uncomment below to test apiWalletTransactionsGet
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val walletName : kotlin.String = walletName_example // kotlin.String | 
            //val skip : kotlin.Int = 56 // kotlin.Int | 
            //val count : kotlin.Int = 56 // kotlin.Int | 
            //apiInstance.apiWalletTransactionsGet(nodeUrlOrApiAccessKey, walletName, skip, count)
        }

        // to test apiWalletWalletAddressBalanceGet
        should("test apiWalletWalletAddressBalanceGet") {
            // uncomment below to test apiWalletWalletAddressBalanceGet
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val walletName : kotlin.String = walletName_example // kotlin.String | 
            //val address : kotlin.String = address_example // kotlin.String | 
            //apiInstance.apiWalletWalletAddressBalanceGet(nodeUrlOrApiAccessKey, walletName, address)
        }

        // to test apiWalletWalletAddressTransactionsGet
        should("test apiWalletWalletAddressTransactionsGet") {
            // uncomment below to test apiWalletWalletAddressTransactionsGet
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val walletName : kotlin.String = walletName_example // kotlin.String | 
            //val address : kotlin.String = address_example // kotlin.String | 
            //apiInstance.apiWalletWalletAddressTransactionsGet(nodeUrlOrApiAccessKey, walletName, address)
        }

        // to test apiWalletWalletDefaultAddressGet
        should("test apiWalletWalletDefaultAddressGet") {
            // uncomment below to test apiWalletWalletDefaultAddressGet
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val mnemonics : kotlin.String = mnemonics_example // kotlin.String | 
            //val addressType : kotlin.Int = 56 // kotlin.Int | 
            //apiInstance.apiWalletWalletDefaultAddressGet(nodeUrlOrApiAccessKey, mnemonics, addressType)
        }

        // to test apiWalletWalletDefaultAddressV2Get
        should("test apiWalletWalletDefaultAddressV2Get") {
            // uncomment below to test apiWalletWalletDefaultAddressV2Get
            //val nodeUrlOrApiAccessKey : kotlin.String = nodeUrlOrApiAccessKey_example // kotlin.String | 
            //val mnemonics : kotlin.String = mnemonics_example // kotlin.String | 
            //val addressType : kotlin.Int = 56 // kotlin.Int | 
            //apiInstance.apiWalletWalletDefaultAddressV2Get(nodeUrlOrApiAccessKey, mnemonics, addressType)
        }

    }
}
