=begin
#KakrLabs-SDK-Creator

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0

Generated by: https://openapi-generator.tech
Generator version: 7.14.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::WalletApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WalletApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::WalletApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WalletApi' do
    it 'should create an instance of WalletApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::WalletApi)
    end
  end

  # unit tests for api_wallet_addresses_get
  # Get all addresses of a wallet.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [String] :wallet_name 
  # @return [nil]
  describe 'api_wallet_addresses_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_balance_get
  # Get the balance of a wallet.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [String] :wallet_name 
  # @return [nil]
  describe 'api_wallet_balance_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_change_passphrase_post
  # Change the passphrase of a wallet.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [ChangePassphrasedto] :change_passphrasedto 
  # @return [nil]
  describe 'api_wallet_change_passphrase_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_create_encrypted_wallet_post
  # Create an encrypted wallet. this wallet created will be encrypted but cannot be imported to other wallets.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [CreateWalletRequest] :create_wallet_request 
  # @return [nil]
  describe 'api_wallet_create_encrypted_wallet_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_create_importable_encrypted_wallet_post
  # Create an importable encrypted wallet. this wallet created will be encrypted and can be imported to other wallets.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [CreateWalletRequest] :create_wallet_request 
  # @return [nil]
  describe 'api_wallet_create_importable_encrypted_wallet_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_create_importable_wallet_post
  # Create an importable wallet. this wallet created will be encrypted and can be imported to other wallets.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [CreateWalletRequest] :create_wallet_request 
  # @return [nil]
  describe 'api_wallet_create_importable_wallet_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_create_post
  # Create a new wallet. this wallet created but not encrypted and cannot be imported to other wallets.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [CreateWalletRequest] :create_wallet_request 
  # @return [nil]
  describe 'api_wallet_create_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_details_get
  # Get the details of a wallet.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [String] :wallet_name 
  # @return [nil]
  describe 'api_wallet_details_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_encrypt_wallet_post
  # Encrypt a wallet. this wallet created  cannot be imported to other wallets.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [String] :wallet_name 
  # @option opts [EncryptWalletDto] :encrypt_wallet_dto 
  # @return [nil]
  describe 'api_wallet_encrypt_wallet_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_import_wallet_post
  # Import a wallet. this wallet created will be encrypted and can be imported to other wallets.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [ImportWalletdto] :import_walletdto 
  # @return [nil]
  describe 'api_wallet_import_wallet_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_official_address_get
  # Get the official address of a wallet.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [String] :wallet_name 
  # @return [nil]
  describe 'api_wallet_official_address_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_set_wallet_mnemonics_post
  # Set the mnemonics of a wallet.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [String] :wallet_name 
  # @option opts [String] :encrypted_passphrase 
  # @option opts [SetWalletMnemonicsdto] :set_wallet_mnemonicsdto 
  # @return [nil]
  describe 'api_wallet_set_wallet_mnemonics_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_sign_wallet_message_post
  # Sign a message using the wallet.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [String] :wallet_name 
  # @option opts [SignMessageUsingWalletdto] :sign_message_using_walletdto 
  # @return [nil]
  describe 'api_wallet_sign_wallet_message_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_transactions_get
  # Get the transactions of a wallet.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [String] :wallet_name 
  # @option opts [Integer] :skip 
  # @option opts [Integer] :count 
  # @return [nil]
  describe 'api_wallet_transactions_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_wallet_address_balance_get
  # Get the balance of a specific address in a wallet.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [String] :wallet_name 
  # @option opts [String] :address 
  # @return [nil]
  describe 'api_wallet_wallet_address_balance_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_wallet_address_transactions_get
  # Get the transactions of a specific address in a wallet.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [String] :wallet_name 
  # @option opts [String] :address 
  # @return [nil]
  describe 'api_wallet_wallet_address_transactions_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_wallet_default_address_get
  # default addresss of a wallet without private key
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [String] :mnemonics 
  # @option opts [Integer] :address_type 
  # @return [nil]
  describe 'api_wallet_wallet_default_address_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_wallet_wallet_default_address_v2_get
  # default addresss of a wallet with private key
  # @param [Hash] opts the optional parameters
  # @option opts [String] :node_url_or_api_access_key 
  # @option opts [String] :mnemonics 
  # @option opts [Integer] :address_type 
  # @return [nil]
  describe 'api_wallet_wallet_default_address_v2_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
