/*
KakrLabs-SDK-Creator

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SendFromWalletdto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendFromWalletdto{}

// SendFromWalletdto struct for SendFromWalletdto
type SendFromWalletdto struct {
	RecipientAddress NullableString `json:"recipientAddress,omitempty"`
	RecipientName NullableString `json:"recipientName,omitempty"`
	Amount *float64 `json:"amount,omitempty"`
	Description NullableString `json:"description,omitempty"`
	AmountIncludeFees *bool `json:"amountIncludeFees,omitempty"`
}

// NewSendFromWalletdto instantiates a new SendFromWalletdto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendFromWalletdto() *SendFromWalletdto {
	this := SendFromWalletdto{}
	return &this
}

// NewSendFromWalletdtoWithDefaults instantiates a new SendFromWalletdto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendFromWalletdtoWithDefaults() *SendFromWalletdto {
	this := SendFromWalletdto{}
	return &this
}

// GetRecipientAddress returns the RecipientAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SendFromWalletdto) GetRecipientAddress() string {
	if o == nil || IsNil(o.RecipientAddress.Get()) {
		var ret string
		return ret
	}
	return *o.RecipientAddress.Get()
}

// GetRecipientAddressOk returns a tuple with the RecipientAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SendFromWalletdto) GetRecipientAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecipientAddress.Get(), o.RecipientAddress.IsSet()
}

// HasRecipientAddress returns a boolean if a field has been set.
func (o *SendFromWalletdto) HasRecipientAddress() bool {
	if o != nil && o.RecipientAddress.IsSet() {
		return true
	}

	return false
}

// SetRecipientAddress gets a reference to the given NullableString and assigns it to the RecipientAddress field.
func (o *SendFromWalletdto) SetRecipientAddress(v string) {
	o.RecipientAddress.Set(&v)
}
// SetRecipientAddressNil sets the value for RecipientAddress to be an explicit nil
func (o *SendFromWalletdto) SetRecipientAddressNil() {
	o.RecipientAddress.Set(nil)
}

// UnsetRecipientAddress ensures that no value is present for RecipientAddress, not even an explicit nil
func (o *SendFromWalletdto) UnsetRecipientAddress() {
	o.RecipientAddress.Unset()
}

// GetRecipientName returns the RecipientName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SendFromWalletdto) GetRecipientName() string {
	if o == nil || IsNil(o.RecipientName.Get()) {
		var ret string
		return ret
	}
	return *o.RecipientName.Get()
}

// GetRecipientNameOk returns a tuple with the RecipientName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SendFromWalletdto) GetRecipientNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecipientName.Get(), o.RecipientName.IsSet()
}

// HasRecipientName returns a boolean if a field has been set.
func (o *SendFromWalletdto) HasRecipientName() bool {
	if o != nil && o.RecipientName.IsSet() {
		return true
	}

	return false
}

// SetRecipientName gets a reference to the given NullableString and assigns it to the RecipientName field.
func (o *SendFromWalletdto) SetRecipientName(v string) {
	o.RecipientName.Set(&v)
}
// SetRecipientNameNil sets the value for RecipientName to be an explicit nil
func (o *SendFromWalletdto) SetRecipientNameNil() {
	o.RecipientName.Set(nil)
}

// UnsetRecipientName ensures that no value is present for RecipientName, not even an explicit nil
func (o *SendFromWalletdto) UnsetRecipientName() {
	o.RecipientName.Unset()
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *SendFromWalletdto) GetAmount() float64 {
	if o == nil || IsNil(o.Amount) {
		var ret float64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendFromWalletdto) GetAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *SendFromWalletdto) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float64 and assigns it to the Amount field.
func (o *SendFromWalletdto) SetAmount(v float64) {
	o.Amount = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SendFromWalletdto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SendFromWalletdto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SendFromWalletdto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SendFromWalletdto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SendFromWalletdto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SendFromWalletdto) UnsetDescription() {
	o.Description.Unset()
}

// GetAmountIncludeFees returns the AmountIncludeFees field value if set, zero value otherwise.
func (o *SendFromWalletdto) GetAmountIncludeFees() bool {
	if o == nil || IsNil(o.AmountIncludeFees) {
		var ret bool
		return ret
	}
	return *o.AmountIncludeFees
}

// GetAmountIncludeFeesOk returns a tuple with the AmountIncludeFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendFromWalletdto) GetAmountIncludeFeesOk() (*bool, bool) {
	if o == nil || IsNil(o.AmountIncludeFees) {
		return nil, false
	}
	return o.AmountIncludeFees, true
}

// HasAmountIncludeFees returns a boolean if a field has been set.
func (o *SendFromWalletdto) HasAmountIncludeFees() bool {
	if o != nil && !IsNil(o.AmountIncludeFees) {
		return true
	}

	return false
}

// SetAmountIncludeFees gets a reference to the given bool and assigns it to the AmountIncludeFees field.
func (o *SendFromWalletdto) SetAmountIncludeFees(v bool) {
	o.AmountIncludeFees = &v
}

func (o SendFromWalletdto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendFromWalletdto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RecipientAddress.IsSet() {
		toSerialize["recipientAddress"] = o.RecipientAddress.Get()
	}
	if o.RecipientName.IsSet() {
		toSerialize["recipientName"] = o.RecipientName.Get()
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.AmountIncludeFees) {
		toSerialize["amountIncludeFees"] = o.AmountIncludeFees
	}
	return toSerialize, nil
}

type NullableSendFromWalletdto struct {
	value *SendFromWalletdto
	isSet bool
}

func (v NullableSendFromWalletdto) Get() *SendFromWalletdto {
	return v.value
}

func (v *NullableSendFromWalletdto) Set(val *SendFromWalletdto) {
	v.value = val
	v.isSet = true
}

func (v NullableSendFromWalletdto) IsSet() bool {
	return v.isSet
}

func (v *NullableSendFromWalletdto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendFromWalletdto(val *SendFromWalletdto) *NullableSendFromWalletdto {
	return &NullableSendFromWalletdto{value: val, isSet: true}
}

func (v NullableSendFromWalletdto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendFromWalletdto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


