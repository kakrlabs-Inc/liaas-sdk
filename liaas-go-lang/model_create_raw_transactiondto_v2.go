/*
KakrLabs-SDK-Creator

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateRawTransactiondtoV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRawTransactiondtoV2{}

// CreateRawTransactiondtoV2 struct for CreateRawTransactiondtoV2
type CreateRawTransactiondtoV2 struct {
	SenderAddress string `json:"senderAddress"`
	RecipientAddress string `json:"recipientAddress"`
	Amount float64 `json:"amount"`
	Utxos []string `json:"utxos"`
	VoutsN []int32 `json:"vouts_n"`
}

type _CreateRawTransactiondtoV2 CreateRawTransactiondtoV2

// NewCreateRawTransactiondtoV2 instantiates a new CreateRawTransactiondtoV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRawTransactiondtoV2(senderAddress string, recipientAddress string, amount float64, utxos []string, voutsN []int32) *CreateRawTransactiondtoV2 {
	this := CreateRawTransactiondtoV2{}
	this.SenderAddress = senderAddress
	this.RecipientAddress = recipientAddress
	this.Amount = amount
	this.Utxos = utxos
	this.VoutsN = voutsN
	return &this
}

// NewCreateRawTransactiondtoV2WithDefaults instantiates a new CreateRawTransactiondtoV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRawTransactiondtoV2WithDefaults() *CreateRawTransactiondtoV2 {
	this := CreateRawTransactiondtoV2{}
	return &this
}

// GetSenderAddress returns the SenderAddress field value
func (o *CreateRawTransactiondtoV2) GetSenderAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SenderAddress
}

// GetSenderAddressOk returns a tuple with the SenderAddress field value
// and a boolean to check if the value has been set.
func (o *CreateRawTransactiondtoV2) GetSenderAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SenderAddress, true
}

// SetSenderAddress sets field value
func (o *CreateRawTransactiondtoV2) SetSenderAddress(v string) {
	o.SenderAddress = v
}

// GetRecipientAddress returns the RecipientAddress field value
func (o *CreateRawTransactiondtoV2) GetRecipientAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecipientAddress
}

// GetRecipientAddressOk returns a tuple with the RecipientAddress field value
// and a boolean to check if the value has been set.
func (o *CreateRawTransactiondtoV2) GetRecipientAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecipientAddress, true
}

// SetRecipientAddress sets field value
func (o *CreateRawTransactiondtoV2) SetRecipientAddress(v string) {
	o.RecipientAddress = v
}

// GetAmount returns the Amount field value
func (o *CreateRawTransactiondtoV2) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CreateRawTransactiondtoV2) GetAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CreateRawTransactiondtoV2) SetAmount(v float64) {
	o.Amount = v
}

// GetUtxos returns the Utxos field value
func (o *CreateRawTransactiondtoV2) GetUtxos() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Utxos
}

// GetUtxosOk returns a tuple with the Utxos field value
// and a boolean to check if the value has been set.
func (o *CreateRawTransactiondtoV2) GetUtxosOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Utxos, true
}

// SetUtxos sets field value
func (o *CreateRawTransactiondtoV2) SetUtxos(v []string) {
	o.Utxos = v
}

// GetVoutsN returns the VoutsN field value
func (o *CreateRawTransactiondtoV2) GetVoutsN() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.VoutsN
}

// GetVoutsNOk returns a tuple with the VoutsN field value
// and a boolean to check if the value has been set.
func (o *CreateRawTransactiondtoV2) GetVoutsNOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoutsN, true
}

// SetVoutsN sets field value
func (o *CreateRawTransactiondtoV2) SetVoutsN(v []int32) {
	o.VoutsN = v
}

func (o CreateRawTransactiondtoV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRawTransactiondtoV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["senderAddress"] = o.SenderAddress
	toSerialize["recipientAddress"] = o.RecipientAddress
	toSerialize["amount"] = o.Amount
	toSerialize["utxos"] = o.Utxos
	toSerialize["vouts_n"] = o.VoutsN
	return toSerialize, nil
}

func (o *CreateRawTransactiondtoV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"senderAddress",
		"recipientAddress",
		"amount",
		"utxos",
		"vouts_n",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRawTransactiondtoV2 := _CreateRawTransactiondtoV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateRawTransactiondtoV2)

	if err != nil {
		return err
	}

	*o = CreateRawTransactiondtoV2(varCreateRawTransactiondtoV2)

	return err
}

type NullableCreateRawTransactiondtoV2 struct {
	value *CreateRawTransactiondtoV2
	isSet bool
}

func (v NullableCreateRawTransactiondtoV2) Get() *CreateRawTransactiondtoV2 {
	return v.value
}

func (v *NullableCreateRawTransactiondtoV2) Set(val *CreateRawTransactiondtoV2) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRawTransactiondtoV2) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRawTransactiondtoV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRawTransactiondtoV2(val *CreateRawTransactiondtoV2) *NullableCreateRawTransactiondtoV2 {
	return &NullableCreateRawTransactiondtoV2{value: val, isSet: true}
}

func (v NullableCreateRawTransactiondtoV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRawTransactiondtoV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


