/**
 * KakrLabs-SDK-Creator
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BroadcastTransactiondto from '../model/BroadcastTransactiondto';
import CreateRawTransactiondto from '../model/CreateRawTransactiondto';
import CreateRawTransactiondtoV2 from '../model/CreateRawTransactiondtoV2';
import CreateRawTransactiondtoV3 from '../model/CreateRawTransactiondtoV3';
import SendFromWalletdto from '../model/SendFromWalletdto';
import SignRawTransactiondto from '../model/SignRawTransactiondto';

/**
* Transactions service.
* @module api/TransactionsApi
* @version 1.0
*/
export default class TransactionsApi {

    /**
    * Constructs a new TransactionsApi. 
    * @alias module:api/TransactionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransactionsBroadcastTransactionPost operation.
     * @callback module:api/TransactionsApi~apiTransactionsBroadcastTransactionPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * broadcast transaction on the Litecoin blockchain
     * @param {Object} opts Optional parameters
     * @param {String} [nodeUrlOrApiAccessKey] 
     * @param {module:model/BroadcastTransactiondto} [broadcastTransactiondto] 
     * @param {module:api/TransactionsApi~apiTransactionsBroadcastTransactionPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransactionsBroadcastTransactionPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['broadcastTransactiondto'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'nodeUrlOrApiAccessKey': opts['nodeUrlOrApiAccessKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Transactions/broadcast-transaction', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransactionsCreateRawTransactionPost operation.
     * @callback module:api/TransactionsApi~apiTransactionsCreateRawTransactionPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create raw transaction - returns the transaction hash
     * @param {Object} opts Optional parameters
     * @param {String} [nodeUrlOrApiAccessKey] 
     * @param {String} [walletName] 
     * @param {module:model/CreateRawTransactiondto} [createRawTransactiondto] 
     * @param {module:api/TransactionsApi~apiTransactionsCreateRawTransactionPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransactionsCreateRawTransactionPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['createRawTransactiondto'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'nodeUrlOrApiAccessKey': opts['nodeUrlOrApiAccessKey'],
        'walletName': opts['walletName']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Transactions/create-raw-transaction', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransactionsCreateRawTransactionV2Post operation.
     * @callback module:api/TransactionsApi~apiTransactionsCreateRawTransactionV2PostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create raw transaction with the address UTXOs - returns the transaction hash
     * @param {Object} opts Optional parameters
     * @param {String} [nodeUrlOrApiAccessKey] 
     * @param {module:model/CreateRawTransactiondtoV2} [createRawTransactiondtoV2] 
     * @param {module:api/TransactionsApi~apiTransactionsCreateRawTransactionV2PostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransactionsCreateRawTransactionV2Post(opts, callback) {
      opts = opts || {};
      let postBody = opts['createRawTransactiondtoV2'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'nodeUrlOrApiAccessKey': opts['nodeUrlOrApiAccessKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Transactions/create-raw-transaction-v2', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransactionsCreateRawTransactionV3Post operation.
     * @callback module:api/TransactionsApi~apiTransactionsCreateRawTransactionV3PostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create raw transaction with the service Fee address attached - returns the transaction hash
     * @param {Object} opts Optional parameters
     * @param {String} [nodeUrlOrApiAccessKey] 
     * @param {String} [walletName] 
     * @param {module:model/CreateRawTransactiondtoV3} [createRawTransactiondtoV3] 
     * @param {module:api/TransactionsApi~apiTransactionsCreateRawTransactionV3PostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransactionsCreateRawTransactionV3Post(opts, callback) {
      opts = opts || {};
      let postBody = opts['createRawTransactiondtoV3'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'nodeUrlOrApiAccessKey': opts['nodeUrlOrApiAccessKey'],
        'walletName': opts['walletName']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Transactions/create-raw-transaction-v3', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransactionsSendFundsFromWalletPost operation.
     * @callback module:api/TransactionsApi~apiTransactionsSendFundsFromWalletPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send a funds from one address to another using wallet
     * @param {Object} opts Optional parameters
     * @param {String} [nodeUrlOrApiAccessKey] 
     * @param {String} [walletName] 
     * @param {String} [encryptedPassphrase] 
     * @param {module:model/SendFromWalletdto} [sendFromWalletdto] 
     * @param {module:api/TransactionsApi~apiTransactionsSendFundsFromWalletPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransactionsSendFundsFromWalletPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['sendFromWalletdto'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'nodeUrlOrApiAccessKey': opts['nodeUrlOrApiAccessKey'],
        'walletName': opts['walletName'],
        'encryptedPassphrase': opts['encryptedPassphrase']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Transactions/send-funds-from-wallet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransactionsSignTransactionPost operation.
     * @callback module:api/TransactionsApi~apiTransactionsSignTransactionPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * sign a created raw transaction - returns the signed transaction hash
     * @param {Object} opts Optional parameters
     * @param {String} [nodeUrlOrApiAccessKey] 
     * @param {String} [walletName] 
     * @param {module:model/SignRawTransactiondto} [signRawTransactiondto] 
     * @param {module:api/TransactionsApi~apiTransactionsSignTransactionPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransactionsSignTransactionPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['signRawTransactiondto'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'nodeUrlOrApiAccessKey': opts['nodeUrlOrApiAccessKey'],
        'walletName': opts['walletName']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Transactions/sign-transaction', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
