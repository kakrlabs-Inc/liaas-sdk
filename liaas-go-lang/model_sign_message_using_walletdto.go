/*
KakrLabs-SDK-Creator

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SignMessageUsingWalletdto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignMessageUsingWalletdto{}

// SignMessageUsingWalletdto struct for SignMessageUsingWalletdto
type SignMessageUsingWalletdto struct {
	Message string `json:"message"`
	Passphrase string `json:"passphrase"`
	Address string `json:"address"`
}

type _SignMessageUsingWalletdto SignMessageUsingWalletdto

// NewSignMessageUsingWalletdto instantiates a new SignMessageUsingWalletdto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignMessageUsingWalletdto(message string, passphrase string, address string) *SignMessageUsingWalletdto {
	this := SignMessageUsingWalletdto{}
	this.Message = message
	this.Passphrase = passphrase
	this.Address = address
	return &this
}

// NewSignMessageUsingWalletdtoWithDefaults instantiates a new SignMessageUsingWalletdto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignMessageUsingWalletdtoWithDefaults() *SignMessageUsingWalletdto {
	this := SignMessageUsingWalletdto{}
	return &this
}

// GetMessage returns the Message field value
func (o *SignMessageUsingWalletdto) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *SignMessageUsingWalletdto) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *SignMessageUsingWalletdto) SetMessage(v string) {
	o.Message = v
}

// GetPassphrase returns the Passphrase field value
func (o *SignMessageUsingWalletdto) GetPassphrase() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Passphrase
}

// GetPassphraseOk returns a tuple with the Passphrase field value
// and a boolean to check if the value has been set.
func (o *SignMessageUsingWalletdto) GetPassphraseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Passphrase, true
}

// SetPassphrase sets field value
func (o *SignMessageUsingWalletdto) SetPassphrase(v string) {
	o.Passphrase = v
}

// GetAddress returns the Address field value
func (o *SignMessageUsingWalletdto) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *SignMessageUsingWalletdto) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *SignMessageUsingWalletdto) SetAddress(v string) {
	o.Address = v
}

func (o SignMessageUsingWalletdto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignMessageUsingWalletdto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	toSerialize["passphrase"] = o.Passphrase
	toSerialize["address"] = o.Address
	return toSerialize, nil
}

func (o *SignMessageUsingWalletdto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
		"passphrase",
		"address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSignMessageUsingWalletdto := _SignMessageUsingWalletdto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSignMessageUsingWalletdto)

	if err != nil {
		return err
	}

	*o = SignMessageUsingWalletdto(varSignMessageUsingWalletdto)

	return err
}

type NullableSignMessageUsingWalletdto struct {
	value *SignMessageUsingWalletdto
	isSet bool
}

func (v NullableSignMessageUsingWalletdto) Get() *SignMessageUsingWalletdto {
	return v.value
}

func (v *NullableSignMessageUsingWalletdto) Set(val *SignMessageUsingWalletdto) {
	v.value = val
	v.isSet = true
}

func (v NullableSignMessageUsingWalletdto) IsSet() bool {
	return v.isSet
}

func (v *NullableSignMessageUsingWalletdto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignMessageUsingWalletdto(val *SignMessageUsingWalletdto) *NullableSignMessageUsingWalletdto {
	return &NullableSignMessageUsingWalletdto{value: val, isSet: true}
}

func (v NullableSignMessageUsingWalletdto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignMessageUsingWalletdto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


